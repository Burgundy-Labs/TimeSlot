# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# GET requests
GET         /                                                                    controllers.LoginController.index
GET         /Dashboard                                                           controllers.DashboardController.index
GET         /Account                                                             controllers.AccountController.index
GET         /Settings                                                            controllers.SettingsController.index
GET         /Appointments                                                        controllers.AppointmentsController.index
GET         /Coaches                                                             controllers.UserController.index
GET         /getCoachesByService/:serviceId                                      controllers.UserController.getCoachesByService(serviceId: String)
GET         /Center                                                              controllers.CenterController.index
GET         /Login                                                               controllers.LoginController.index
GET         /Logout                                                              controllers.LoginController.logout
GET         /Help                                                                controllers.StaticController.help
GET         /Terms                                                               controllers.StaticController.terms
GET         /Station                                                             controllers.StationController.index
GET         /Feedback                                                            controllers.FeedbackController.feedback
GET         /availableSlots/:userId/:start/:end                                  controllers.AppointmentsController.appointmentsAsCoach(userId: String, start: String, end: String)
GET         /availableSlotsForAppointments/:userId/:start/:end/:serviceId        controllers.AppointmentsController.availableSlotsForAppointments(userId: String, start: String, end: String, serviceId: String)
GET         /appointmentsForUser/:role/:userId/:start/:end                       controllers.AppointmentsController.appointmentsForUser(role: String, userId: String, start: String, end: String)
GET         /appointmentsByDate/:role/:userId/:start/:end                        controllers.AppointmentsController.appointmentsByDate(role: String, userId: String, start: String, end: String)
GET         /openAppointments/:coachId/:start/:end                               controllers.AppointmentsController.openAppointments(coachId: String, start: String, end: String)
GET         /Reports                                                             controllers.ReportsController.index
GET         /AppointmentStatistics/:reportStart/:reportEnd                       controllers.ReportsController.getAppointmentDate(reportStart: Long, reportEnd: Long)
GET         /getUserByID/:ID                                                     controllers.StationController.getUserByID(ID: String)
GET         /User/:ID                                                            controllers.UserController.userPage(ID: String)
GET         /Schedule                                                            controllers.ScheduleController.index

# POST requests
POST        /signedIn                                                            controllers.LoginController.signedIn()
POST        /updateUser                                                          controllers.UserController.updateUser()
POST        /deleteUser                                                          controllers.UserController.removeUser()
POST        /updateUserRole                                                      controllers.UserController.updateUserRole()
POST        /addServiceToCoach                                                   controllers.UserController.addServiceToCoach()
POST        /removeServiceFromCoach                                              controllers.UserController.removeServiceFromCoach()
POST        /updateSettings                                                      controllers.SettingsController.updateSettings()
POST        /createAppointmentType                                               controllers.SettingsController.createAppointmentType()
POST        /removeAppointmentType                                               controllers.SettingsController.removeAppointmentType()
POST        /createService                                                       controllers.SettingsController.createService()
POST        /removeService                                                       controllers.SettingsController.removeService()
POST        /createAppointment                                                   controllers.AppointmentsController.createAppointment()
POST        /cancelAppointment                                                   controllers.AppointmentsController.cancelAppointment()
POST        /removeAppointment                                                   controllers.AppointmentsController.removeAppointment()
POST        /updateCoachNotes                                                    controllers.AppointmentsController.updateCoachNotes()
POST        /updatePresence                                                      controllers.AppointmentsController.updatePresence()
POST        /createAvailability                                                  controllers.AppointmentsController.createAvailability()
POST        /removeAvailability                                                  controllers.AvailabilityController.removeAvailability()
POST        /sendFeedback                                                        controllers.FeedbackController.sendFeedback()
POST        /appointmentTypeFrequency                                            controllers.SettingsController.appointmentTypeFrequency()
POST        /changeSiteAlert                                                     controllers.SettingsController.changeSiteAlert()
POST        /changeCenterInformation                                             controllers.SettingsController.changeCenterInformation()
POST        /isCoachChecked                                                      controllers.UserController.isCoach()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                        controllers.Assets.at(path="/public", file)