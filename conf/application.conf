# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "290DP4t1GDdT>7txbbfcLH9kO=iRzKt@j=7@7r:qCoIuW/^WikbJzM6f`NuKz=We"

# The application languages
# ~~~~~
play.i18n.langs = [ "en", "en-US"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Content Security set up - allow from self-hosted and https*
play.filters.headers.contentSecurityPolicy = "default-src 'self' data: https:; font-src 'self' data: https:; script-src 'self' 'unsafe-inline' data: https:; img-src 'self'  data: https: data: image/svg+xml; style-src 'self' 'unsafe-inline' data: https:; connect-src 'self' data: https: data: wss:"

# ALlow Heroku Host
play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = [".herokuapp.com", "localhost:9000", "scheduling.mtmc.mtu.edu"]
}

play.mailer {
  host = "smtp.gmail.com" // (mandatory)
  port = 587 // (defaults to 25)
  ssl = no // (defaults to no)
  tls = yes // (defaults to no)
  tlsRequired = yes // (defaults to no)
  user = "contact.project.burgundy@gmail.com" // (optional)
  password = "ApplicationTest" // (optional)
  debug = no // (defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  timeout = null // (defaults to 60s in milliseconds)
  connectiontimeout = null // (defaults to 60s in milliseconds)
  mock = no // (defaults to no, will only log all the email properties instead of sending an email)
}

# Modules FirestoreDB Init
play.modules.enabled += "modules.StartupModule"
